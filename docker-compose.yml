version: "3.8"

services:
  broker-service:
    build:
      context: ./broker-service
      dockerfile: ./broker-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - backend

  authentication-service:
    build:
      context: ./authentication-service
      dockerfile: ./authentication-service.dockerfile
    restart: always
    ports:
      - "8082:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=postgres dbname=users sslmode=disable timezone=UTC connect_timeout=5"
    networks:
      - backend

  logger-service:
    build:
      context: ./logger-service
      dockerfile: ./logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - backend

  mailer-service:
    build:
      context: ./mail-service
      dockerfile: ./mail-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: mailhog
      MAIL_HOST: mailhog
      MAIL_MAILER: smtp
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: null
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com
    depends_on:
      - mailhog
    networks:
      - backend

  postgres:
    image: "postgres:14"
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data
    networks:
      - backend

  mongo:
    image: "mongo:5"
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db
    networks:
      - backend

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: on-failure
    networks:
      - backend
networks:
  backend:
    driver: bridge
